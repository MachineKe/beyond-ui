import{j as e}from"./cn-BIubIUvQ.js";import{r as i}from"./index-l2PZgWEW.js";import{B as l}from"./Button-D4FIw8ay.js";const r=()=>{const[o,c]=i.useState(!1);return e.jsxs("div",{className:"flex flex-col items-center gap-4 p-8 border rounded bg-background max-w-md mx-auto min-h-[200px]",children:[e.jsx("div",{children:e.jsx(l,{onClick:()=>c(n=>!n),children:o?"Logout":"Login (Preview)"})}),o?e.jsx("div",{className:"p-4 text-success-700 bg-success-50 border border-success-200 rounded",children:"This content is only visible if authenticated!"}):e.jsx("div",{className:"p-4 text-danger-700 bg-danger-50 border border-danger-200 rounded",children:"You must be logged in to view protected content."})]})};try{r.displayName="ProtectedRouteExample",r.__docgenInfo={description:`Simple demo: toggling a boolean to represent authenticated/unauthenticated.
This does NOT call login/logout to avoid backend/service dependencies,
and simply shows protected content or a message.`,displayName:"ProtectedRouteExample",props:{}}}catch{}const g={title:"Auth/!isAuthenticatedShield",component:r,tags:["autodocs"],parameters:{layout:"centered"}},t={};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:"{}",...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};const x=["Default"];export{t as Default,x as __namedExportsOrder,g as default};
