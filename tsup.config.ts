import { defineConfig } from "tsup";

export default defineConfig({
  entry: [
    "src/components/Alert/index.ts",
    "src/components/Avatar/index.ts",
    "src/components/Badge/index.ts",
    "src/components/Button/index.ts",
    "src/components/Card/index.ts",
    "src/components/Checkbox/index.ts",
    "src/components/ComponentShowcase/index.ts",
    "src/components/DashboardGrid/index.ts",
    "src/components/DashboardHeader/index.ts",
    "src/components/DashboardLayout/index.ts",
    "src/components/DataTable/index.ts",
    "src/components/Input/index.ts",
    "src/components/Modal/index.ts",
    "src/components/Navbar/index.ts",
    "src/components/Sidebar/index.ts",
    "src/components/Skeleton/index.ts",
    "src/components/Spinner/index.ts",
    "src/components/StatsCard/index.ts",
    "src/components/Switch/index.ts",
    "src/components/Tabs/index.ts",
    "src/components/Textarea/index.ts",
    "src/components/Toast/index.ts",
    "src/hooks/useBreakpoint.ts",
    "src/hooks/useDarkMode.ts",
    "src/hooks/useDebounce.ts",
    "src/hooks/useLocalStorage.ts",
    "src/hooks/useToggle.ts",
    "src/utils/cn.ts",
    "src/theme/default.ts",
    "src/index.ts"
  ],
  format: ["esm", "cjs"],
  dts: true,
  splitting: true,
  sourcemap: true,
  clean: true,
  minify: false,
  preserveModules: true,
  preserveModulesRoot: "src",
  tsconfig: "tsconfig.build.json",
  skipNodeModulesBundle: true
});